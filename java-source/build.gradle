apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'net.corda.plugins.publish-utils'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'maven-publish'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url 'https://dl.bintray.com/kotlin/exposed' }
    maven { url 'https://jitpack.io' }
}

sourceSets {
    main {
        resources {
            srcDir "../config/dev"
        }
    }

}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile group: 'junit', name: 'junit', version: '4.11'

    // Corda integration dependencies
    compile "net.corda:client:$corda_version"
    compile "net.corda:core:$corda_version"
    compile "net.corda:finance:$corda_version"
    compile "net.corda:node:$corda_version"
    compile "net.corda:jackson:0.10.1"
    runtime "net.corda:corda:$corda_version"
    runtime "net.corda:corda-webserver:$corda_version"

    testCompile "net.corda:test-utils:$corda_version"

    // GraphStream: For visualisation (required by TemplateClientRPC app)
    compile "org.graphstream:gs-core:1.3"
    compile("org.graphstream:gs-ui:1.3") {
        exclude group: "bouncycastle"
    }

    // CorDapp dependencies
    // Specify your cordapp's dependencies below, including dependent cordapps
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['build']) {
    directory "./build/nodes"
    networkMap "Controller"
    node {
        name "Controller"
        nearestCity "London"
        advertisedServices = ["corda.notary.validating"]
        artemisPort 10002
        webPort 10003
        cordapps = []
    }
    node {
        name "NodeA"
        nearestCity "London"
        advertisedServices = ["main.currency.USD"]
        artemisPort 10004
        webPort 10005
        cordapps = []
        rpcUsers = [
                ['user' : "user1",
                 'password' : "test",
                 'permissions' : ["StartFlow.net.corda.flows.CashPaymentFlow"]]
        ]
    }
    node {
        name "NodeB"
        nearestCity "New York"
        advertisedServices = ["main.currency.EUR"]
        artemisPort 10006
        webPort 10007
        cordapps = []
        rpcUsers = [
                ['user' : "user1",
                 'password' : "test",
                 'permissions' : ["StartFlow.net.corda.flows.CashPaymentFlow"]]
        ]
    }
    node {
        name "NodeC"
        nearestCity "San Francisco"
        advertisedServices = ["corda.issuer.USD", "corda.issuer.EUR", "tn.fxtrader"]
        artemisPort 10008
        webPort 10009
        cordapps = []
        rpcUsers = [
                ['user' : "user1",
                 'password' : "test",
                 'permissions' : [
                         "StartFlow.net.corda.flows.CashPaymentFlow",
                         "StartFlow.net.corda.flows.IssuerFlow\$IssuanceRequester"
                 ]]
        ]
    }
}

// TODO: Make into gradle plugin without any references to Jython
task installJythonDeps(dependsOn: ['build']) {
    project.copy {
        from project.configurations.runtime
        into "build/jythonDeps"
    }
}

installJythonDeps.shouldRunAfter build

idea {
    module {
        downloadJavadoc = true // defaults to false
        downloadSources = true
    }
}

publishing {
    publications {
        jarAndSources(MavenPublication) {
            from components.java
            artifactId 'cordapp-name-goes-here'

            artifact sourceJar
            artifact javadocJar
        }
    }
}

task runTemplateClientRPC(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.template.client.TemplateClientRPC'
    args 'localhost:10004'
}
